name: Build & Deploy

# Trigger on push to master branch or with a tag
on:
  push:
    branches:
      - '**'
    tags:
      - v*

# If previous workflow is still running, we push again, we will cancel the previous workflow
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  Build:
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      # Checkout branch
      - name: Checkout
        uses: actions/checkout@v4
      # Setup Secret Config
      - name: Setup Secret Config
        run: |
          echo "${{ secrets.DATABASE_CONFIG_FILE }}" > src/main/resources/application-database.yml
          echo "${{ secrets.EH_COOKIE_CONFIG_FILE }}" > src/main/resources/application-eh.yml
          echo "${{ secrets.API_KEY_CONFIG_FILE }}" > src/main/resources/application-apiKey.yml
      # Setup JDK
      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: maven
      # Build
      - name: Build
        run: mvn package
      # Upload Artifacts
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: JHenTai
          path: target/*.jar
  GenerateMatrix:
    name: Generate Matrix
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Generate matrix from secrets
        id: set-matrix
        run: |
          echo '${{ secrets.SERVERS_CONFIG }}' | jq empty  # Validate JSON
          matrix=$(echo '${{ secrets.SERVERS_CONFIG }}' | jq -c '.')
          echo "matrix=$matrix" >> $GITHUB_OUTPUT
  Deploy:
    name: Deploy to Servers
    needs: [ Build, GenerateMatrix ]
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.GenerateMatrix.outputs.matrix) }}
    steps:
      - name: Download jar
        uses: actions/download-artifact@v4
        with:
          name: JHenTai
          path: .
      - name: List jar
        run: ls -lR
      - name: SSH Upload jar
        uses: appleboy/scp-action@master
        with:
          host: ${{ matrix.host }}
          port: ${{ matrix.port }}
          username: ${{ matrix.username }}
          key: ${{ matrix.key }}
          source: ./*
          target: /usr/local/jhentai/
      - name: SSH Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ matrix.host }}
          port: ${{ matrix.port }}
          username: ${{ matrix.username }}
          key: ${{ matrix.key }}
          command_timeout: 30s
          script: |
            cd /usr/local/jhentai
            source ~/.bash_profile
            sh stop.sh
            sh start.sh